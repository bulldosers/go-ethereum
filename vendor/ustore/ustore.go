/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: /home/jingo/gowork/src/ustore/ustore.i

package ustore

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stdint.h>


typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;


typedef _gostring_ swig_type_1;
typedef _gostring_ swig_type_2;
typedef _gostring_ swig_type_3;
typedef _gostring_ swig_type_4;
typedef _gostring_ swig_type_5;
typedef _gostring_ swig_type_6;
typedef _gostring_ swig_type_7;
typedef _gostring_ swig_type_8;
typedef _gostring_ swig_type_9;
typedef _gostring_ swig_type_10;
typedef _gostring_ swig_type_11;
typedef _gostring_ swig_type_12;
typedef _gostring_ swig_type_13;
typedef _gostring_ swig_type_14;
typedef _gostring_ swig_type_15;
typedef _gostring_ swig_type_16;
typedef _gostring_ swig_type_17;
typedef _gostring_ swig_type_18;
typedef _gostring_ swig_type_19;
typedef _gostring_ swig_type_20;
typedef _gostring_ swig_type_21;
typedef _gostring_ swig_type_22;
typedef _gostring_ swig_type_23;
typedef _gostring_ swig_type_24;
typedef _gostring_ swig_type_25;
typedef _gostring_ swig_type_26;
typedef _gostring_ swig_type_27;
typedef _gostring_ swig_type_28;
typedef _gostring_ swig_type_29;
typedef _gostring_ swig_type_30;
typedef _gostring_ swig_type_31;
typedef _gostring_ swig_type_32;
extern void _wrap_Swig_free_ustore_b40e736282a5577d(uintptr_t arg1);
extern uintptr_t _wrap_Swig_malloc_ustore_b40e736282a5577d(swig_intgo arg1);
extern uintptr_t _wrap_Status_OK_ustore_b40e736282a5577d(void);
extern uintptr_t _wrap_Status_NotFound__SWIG_0_ustore_b40e736282a5577d(swig_type_1 arg1, swig_type_2 arg2);
extern uintptr_t _wrap_Status_NotFound__SWIG_1_ustore_b40e736282a5577d(swig_type_3 arg1);
extern uintptr_t _wrap_Status_Corruption__SWIG_0_ustore_b40e736282a5577d(swig_type_4 arg1, swig_type_5 arg2);
extern uintptr_t _wrap_Status_Corruption__SWIG_1_ustore_b40e736282a5577d(swig_type_6 arg1);
extern uintptr_t _wrap_Status_NotSupported__SWIG_0_ustore_b40e736282a5577d(swig_type_7 arg1, swig_type_8 arg2);
extern uintptr_t _wrap_Status_NotSupported__SWIG_1_ustore_b40e736282a5577d(swig_type_9 arg1);
extern uintptr_t _wrap_Status_InvalidArgument__SWIG_0_ustore_b40e736282a5577d(swig_type_10 arg1, swig_type_11 arg2);
extern uintptr_t _wrap_Status_InvalidArgument__SWIG_1_ustore_b40e736282a5577d(swig_type_12 arg1);
extern uintptr_t _wrap_Status_IOError__SWIG_0_ustore_b40e736282a5577d(swig_type_13 arg1, swig_type_14 arg2);
extern uintptr_t _wrap_Status_IOError__SWIG_1_ustore_b40e736282a5577d(swig_type_15 arg1);
extern _Bool _wrap_Status_ok_ustore_b40e736282a5577d(uintptr_t arg1);
extern _Bool _wrap_Status_IsNotFound_ustore_b40e736282a5577d(uintptr_t arg1);
extern _Bool _wrap_Status_IsCorruption_ustore_b40e736282a5577d(uintptr_t arg1);
extern _Bool _wrap_Status_IsNotSupported_ustore_b40e736282a5577d(uintptr_t arg1);
extern _Bool _wrap_Status_IsInvalidArgument_ustore_b40e736282a5577d(uintptr_t arg1);
extern _Bool _wrap_Status_IsIOError_ustore_b40e736282a5577d(uintptr_t arg1);
extern swig_type_16 _wrap_Status_ToString_ustore_b40e736282a5577d(uintptr_t arg1);
extern uintptr_t _wrap_new_Status_ustore_b40e736282a5577d(void);
extern void _wrap_delete_Status_ustore_b40e736282a5577d(uintptr_t arg1);
extern void _wrap_WriteBatch_Put_ustore_b40e736282a5577d(uintptr_t arg1, swig_type_17 arg2, swig_type_18 arg3);
extern void _wrap_WriteBatch_Delete_ustore_b40e736282a5577d(uintptr_t arg1, swig_type_19 arg2);
extern void _wrap_WriteBatch_Clear_ustore_b40e736282a5577d(uintptr_t arg1);
extern uintptr_t _wrap_new_WriteBatch_ustore_b40e736282a5577d(void);
extern void _wrap_delete_WriteBatch_ustore_b40e736282a5577d(uintptr_t arg1);
extern uintptr_t _wrap_new_PairStatusString__SWIG_0_ustore_b40e736282a5577d(void);
extern uintptr_t _wrap_new_PairStatusString__SWIG_1_ustore_b40e736282a5577d(uintptr_t arg1, swig_type_20 arg2);
extern uintptr_t _wrap_new_PairStatusString__SWIG_2_ustore_b40e736282a5577d(uintptr_t arg1);
extern void _wrap_PairStatusString_first_set_ustore_b40e736282a5577d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_PairStatusString_first_get_ustore_b40e736282a5577d(uintptr_t arg1);
extern void _wrap_PairStatusString_second_set_ustore_b40e736282a5577d(uintptr_t arg1, swig_type_21 arg2);
extern swig_type_22 _wrap_PairStatusString_second_get_ustore_b40e736282a5577d(uintptr_t arg1);
extern void _wrap_delete_PairStatusString_ustore_b40e736282a5577d(uintptr_t arg1);
extern uintptr_t _wrap_new_KVDB__SWIG_0_ustore_b40e736282a5577d(swig_intgo arg1);
extern uintptr_t _wrap_new_KVDB__SWIG_1_ustore_b40e736282a5577d(void);
extern uintptr_t _wrap_KVDB_Get_ustore_b40e736282a5577d(uintptr_t arg1, swig_type_23 arg2);
extern uintptr_t _wrap_KVDB_Put_ustore_b40e736282a5577d(uintptr_t arg1, swig_type_24 arg2, swig_type_25 arg3);
extern uintptr_t _wrap_KVDB_Delete_ustore_b40e736282a5577d(uintptr_t arg1, swig_type_26 arg2);
extern uintptr_t _wrap_KVDB_Write_ustore_b40e736282a5577d(uintptr_t arg1, uintptr_t arg2);
extern _Bool _wrap_KVDB_Exist_ustore_b40e736282a5577d(uintptr_t arg1, swig_type_27 arg2);
extern uintptr_t _wrap_KVDB_NewIterator_ustore_b40e736282a5577d(uintptr_t arg1);
extern void _wrap_delete_KVDB_ustore_b40e736282a5577d(uintptr_t arg1);
extern void _wrap_delete_Iterator_ustore_b40e736282a5577d(uintptr_t arg1);
extern void _wrap_Iterator_Release_ustore_b40e736282a5577d(uintptr_t arg1);
extern void _wrap_Iterator_SetRange_ustore_b40e736282a5577d(uintptr_t arg1, swig_type_28 arg2, swig_type_29 arg3);
extern _Bool _wrap_Iterator_Valid_ustore_b40e736282a5577d(uintptr_t arg1);
extern void _wrap_Iterator_SeekToFirst_ustore_b40e736282a5577d(uintptr_t arg1);
extern void _wrap_Iterator_SeekToLast_ustore_b40e736282a5577d(uintptr_t arg1);
extern void _wrap_Iterator_Seek_ustore_b40e736282a5577d(uintptr_t arg1, swig_type_30 arg2);
extern _Bool _wrap_Iterator_Next_ustore_b40e736282a5577d(uintptr_t arg1);
extern _Bool _wrap_Iterator_Prev_ustore_b40e736282a5577d(uintptr_t arg1);
extern swig_type_31 _wrap_Iterator_key_ustore_b40e736282a5577d(uintptr_t arg1);
extern swig_type_32 _wrap_Iterator_value_ustore_b40e736282a5577d(uintptr_t arg1);
extern uintptr_t _wrap_NewEmptyIterator_ustore_b40e736282a5577d(void);
#undef intgo
*/
import "C"

import "unsafe"
import _ "runtime/cgo"
import "sync"


type _ unsafe.Pointer



var Swig_escape_always_false bool
var Swig_escape_val interface{}


type _swig_fnptr *byte
type _swig_memberptr *byte


type _ sync.Mutex


type swig_gostring struct { p uintptr; n int }
func swigCopyString(s string) string {
  p := *(*swig_gostring)(unsafe.Pointer(&s))
  r := string((*[0x7fffffff]byte)(unsafe.Pointer(p.p))[:p.n])
  Swig_free(p.p)
  return r
}

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))
}

func Swig_malloc(arg1 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_Swig_malloc_ustore_b40e736282a5577d(C.swig_intgo(_swig_i_0)))
	return swig_r
}

type SwigcptrStatus uintptr

func (p SwigcptrStatus) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrStatus) SwigIsStatus() {
}

func StatusOK() (_swig_ret Status) {
	var swig_r Status
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_OK_ustore_b40e736282a5577d()))
	return swig_r
}

func StatusNotFound__SWIG_0(arg1 string, arg2 string) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_NotFound__SWIG_0_ustore_b40e736282a5577d(*(*C.swig_type_1)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_2)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func StatusNotFound__SWIG_1(arg1 string) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_NotFound__SWIG_1_ustore_b40e736282a5577d(*(*C.swig_type_3)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func StatusNotFound(a ...interface{}) Status {
	argc := len(a)
	if argc == 1 {
		return StatusNotFound__SWIG_1(a[0].(string))
	}
	if argc == 2 {
		return StatusNotFound__SWIG_0(a[0].(string), a[1].(string))
	}
	panic("No match for overloaded function call")
}

func StatusCorruption__SWIG_0(arg1 string, arg2 string) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_Corruption__SWIG_0_ustore_b40e736282a5577d(*(*C.swig_type_4)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_5)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func StatusCorruption__SWIG_1(arg1 string) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_Corruption__SWIG_1_ustore_b40e736282a5577d(*(*C.swig_type_6)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func StatusCorruption(a ...interface{}) Status {
	argc := len(a)
	if argc == 1 {
		return StatusCorruption__SWIG_1(a[0].(string))
	}
	if argc == 2 {
		return StatusCorruption__SWIG_0(a[0].(string), a[1].(string))
	}
	panic("No match for overloaded function call")
}

func StatusNotSupported__SWIG_0(arg1 string, arg2 string) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_NotSupported__SWIG_0_ustore_b40e736282a5577d(*(*C.swig_type_7)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_8)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func StatusNotSupported__SWIG_1(arg1 string) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_NotSupported__SWIG_1_ustore_b40e736282a5577d(*(*C.swig_type_9)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func StatusNotSupported(a ...interface{}) Status {
	argc := len(a)
	if argc == 1 {
		return StatusNotSupported__SWIG_1(a[0].(string))
	}
	if argc == 2 {
		return StatusNotSupported__SWIG_0(a[0].(string), a[1].(string))
	}
	panic("No match for overloaded function call")
}

func StatusInvalidArgument__SWIG_0(arg1 string, arg2 string) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_InvalidArgument__SWIG_0_ustore_b40e736282a5577d(*(*C.swig_type_10)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_11)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func StatusInvalidArgument__SWIG_1(arg1 string) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_InvalidArgument__SWIG_1_ustore_b40e736282a5577d(*(*C.swig_type_12)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func StatusInvalidArgument(a ...interface{}) Status {
	argc := len(a)
	if argc == 1 {
		return StatusInvalidArgument__SWIG_1(a[0].(string))
	}
	if argc == 2 {
		return StatusInvalidArgument__SWIG_0(a[0].(string), a[1].(string))
	}
	panic("No match for overloaded function call")
}

func StatusIOError__SWIG_0(arg1 string, arg2 string) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_IOError__SWIG_0_ustore_b40e736282a5577d(*(*C.swig_type_13)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_14)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func StatusIOError__SWIG_1(arg1 string) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	swig_r = (Status)(SwigcptrStatus(C._wrap_Status_IOError__SWIG_1_ustore_b40e736282a5577d(*(*C.swig_type_15)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func StatusIOError(a ...interface{}) Status {
	argc := len(a)
	if argc == 1 {
		return StatusIOError__SWIG_1(a[0].(string))
	}
	if argc == 2 {
		return StatusIOError__SWIG_0(a[0].(string), a[1].(string))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrStatus) Ok() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Status_ok_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStatus) IsNotFound() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Status_IsNotFound_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStatus) IsCorruption() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Status_IsCorruption_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStatus) IsNotSupported() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Status_IsNotSupported_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStatus) IsInvalidArgument() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Status_IsInvalidArgument_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStatus) IsIOError() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Status_IsIOError_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStatus) ToString() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Status_ToString_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func NewStatus() (_swig_ret Status) {
	var swig_r Status
	swig_r = (Status)(SwigcptrStatus(C._wrap_new_Status_ustore_b40e736282a5577d()))
	return swig_r
}

func DeleteStatus(arg1 Status) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Status_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))
}

type Status interface {
	Swigcptr() uintptr
	SwigIsStatus()
	Ok() (_swig_ret bool)
	IsNotFound() (_swig_ret bool)
	IsCorruption() (_swig_ret bool)
	IsNotSupported() (_swig_ret bool)
	IsInvalidArgument() (_swig_ret bool)
	IsIOError() (_swig_ret bool)
	ToString() (_swig_ret string)
}

type SwigcptrWriteBatch uintptr

func (p SwigcptrWriteBatch) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrWriteBatch) SwigIsWriteBatch() {
}

func (arg1 SwigcptrWriteBatch) Put(arg2 string, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_WriteBatch_Put_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), *(*C.swig_type_17)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_18)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrWriteBatch) Delete(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_WriteBatch_Delete_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), *(*C.swig_type_19)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrWriteBatch) Clear() {
	_swig_i_0 := arg1
	C._wrap_WriteBatch_Clear_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))
}

func NewWriteBatch() (_swig_ret WriteBatch) {
	var swig_r WriteBatch
	swig_r = (WriteBatch)(SwigcptrWriteBatch(C._wrap_new_WriteBatch_ustore_b40e736282a5577d()))
	return swig_r
}

func DeleteWriteBatch(arg1 WriteBatch) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_WriteBatch_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))
}

type WriteBatch interface {
	Swigcptr() uintptr
	SwigIsWriteBatch()
	Put(arg2 string, arg3 string)
	Delete(arg2 string)
	Clear()
}

type SwigcptrPairStatusString uintptr

func (p SwigcptrPairStatusString) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrPairStatusString) SwigIsPairStatusString() {
}

func NewPairStatusString__SWIG_0() (_swig_ret PairStatusString) {
	var swig_r PairStatusString
	swig_r = (PairStatusString)(SwigcptrPairStatusString(C._wrap_new_PairStatusString__SWIG_0_ustore_b40e736282a5577d()))
	return swig_r
}

func NewPairStatusString__SWIG_1(arg1 Status, arg2 string) (_swig_ret PairStatusString) {
	var swig_r PairStatusString
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	swig_r = (PairStatusString)(SwigcptrPairStatusString(C._wrap_new_PairStatusString__SWIG_1_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), *(*C.swig_type_20)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewPairStatusString__SWIG_2(arg1 PairStatusString) (_swig_ret PairStatusString) {
	var swig_r PairStatusString
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (PairStatusString)(SwigcptrPairStatusString(C._wrap_new_PairStatusString__SWIG_2_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewPairStatusString(a ...interface{}) PairStatusString {
	argc := len(a)
	if argc == 0 {
		return NewPairStatusString__SWIG_0()
	}
	if argc == 1 {
		return NewPairStatusString__SWIG_2(a[0].(PairStatusString))
	}
	if argc == 2 {
		return NewPairStatusString__SWIG_1(a[0].(Status), a[1].(string))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrPairStatusString) SetFirst(arg2 Status) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_PairStatusString_first_set_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrPairStatusString) GetFirst() (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	swig_r = (Status)(SwigcptrStatus(C._wrap_PairStatusString_first_get_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrPairStatusString) SetSecond(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_PairStatusString_second_set_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), *(*C.swig_type_21)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrPairStatusString) GetSecond() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_PairStatusString_second_get_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func DeletePairStatusString(arg1 PairStatusString) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_PairStatusString_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))
}

type PairStatusString interface {
	Swigcptr() uintptr
	SwigIsPairStatusString()
	SetFirst(arg2 Status)
	GetFirst() (_swig_ret Status)
	SetSecond(arg2 string)
	GetSecond() (_swig_ret string)
}

type SwigcptrKVDB uintptr

func (p SwigcptrKVDB) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrKVDB) SwigIsKVDB() {
}

func NewKVDB__SWIG_0(arg1 uint) (_swig_ret KVDB) {
	var swig_r KVDB
	_swig_i_0 := arg1
	swig_r = (KVDB)(SwigcptrKVDB(C._wrap_new_KVDB__SWIG_0_ustore_b40e736282a5577d(C.swig_intgo(_swig_i_0))))
	return swig_r
}

func NewKVDB__SWIG_1() (_swig_ret KVDB) {
	var swig_r KVDB
	swig_r = (KVDB)(SwigcptrKVDB(C._wrap_new_KVDB__SWIG_1_ustore_b40e736282a5577d()))
	return swig_r
}

func NewKVDB(a ...interface{}) KVDB {
	argc := len(a)
	if argc == 0 {
		return NewKVDB__SWIG_1()
	}
	if argc == 1 {
		return NewKVDB__SWIG_0(a[0].(uint))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrKVDB) Get(arg2 string) (_swig_ret PairStatusString) {
	var swig_r PairStatusString
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (PairStatusString)(SwigcptrPairStatusString(C._wrap_KVDB_Get_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), *(*C.swig_type_23)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrKVDB) Put(arg2 string, arg3 string) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (Status)(SwigcptrStatus(C._wrap_KVDB_Put_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), *(*C.swig_type_24)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_25)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func (arg1 SwigcptrKVDB) Delete(arg2 string) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Status)(SwigcptrStatus(C._wrap_KVDB_Delete_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), *(*C.swig_type_26)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrKVDB) Write(arg2 WriteBatch) (_swig_ret Status) {
	var swig_r Status
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Status)(SwigcptrStatus(C._wrap_KVDB_Write_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrKVDB) Exist(arg2 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_KVDB_Exist_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), *(*C.swig_type_27)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrKVDB) NewIterator() (_swig_ret Iterator) {
	var swig_r Iterator
	_swig_i_0 := arg1
	swig_r = (Iterator)(SwigcptrIterator(C._wrap_KVDB_NewIterator_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func DeleteKVDB(arg1 KVDB) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_KVDB_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))
}

type KVDB interface {
	Swigcptr() uintptr
	SwigIsKVDB()
	Get(arg2 string) (_swig_ret PairStatusString)
	Put(arg2 string, arg3 string) (_swig_ret Status)
	Delete(arg2 string) (_swig_ret Status)
	Write(arg2 WriteBatch) (_swig_ret Status)
	Exist(arg2 string) (_swig_ret bool)
	NewIterator() (_swig_ret Iterator)
}

type SwigcptrIterator uintptr

func (p SwigcptrIterator) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrIterator) SwigIsIterator() {
}

func DeleteIterator(arg1 Iterator) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Iterator_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrIterator) Release() {
	_swig_i_0 := arg1
	C._wrap_Iterator_Release_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrIterator) SetRange(arg2 string, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Iterator_SetRange_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), *(*C.swig_type_28)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_29)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrIterator) Valid() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Iterator_Valid_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIterator) SeekToFirst() {
	_swig_i_0 := arg1
	C._wrap_Iterator_SeekToFirst_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrIterator) SeekToLast() {
	_swig_i_0 := arg1
	C._wrap_Iterator_SeekToLast_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrIterator) Seek(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Iterator_Seek_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0), *(*C.swig_type_30)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrIterator) Next() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Iterator_Next_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIterator) Prev() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_Iterator_Prev_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIterator) Key() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Iterator_key_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrIterator) Value() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Iterator_value_ustore_b40e736282a5577d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

type Iterator interface {
	Swigcptr() uintptr
	SwigIsIterator()
	Release()
	SetRange(arg2 string, arg3 string)
	Valid() (_swig_ret bool)
	SeekToFirst()
	SeekToLast()
	Seek(arg2 string)
	Next() (_swig_ret bool)
	Prev() (_swig_ret bool)
	Key() (_swig_ret string)
	Value() (_swig_ret string)
}

func NewEmptyIterator() (_swig_ret Iterator) {
	var swig_r Iterator
	swig_r = (Iterator)(SwigcptrIterator(C._wrap_NewEmptyIterator_ustore_b40e736282a5577d()))
	return swig_r
}


